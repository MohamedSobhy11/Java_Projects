/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import static java.sql.JDBCType.NULL;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author Kimo Store
 */
public class IssueBook extends javax.swing.JFrame {

    Book[] b = new Book[100];
    IssuedBook[] m = new IssuedBook[100];
    Student[] c = new Student[100];
    int counter = 0;
    int counter1=0;
     int counter2=0;
    int index;
     Date Date;
    SimpleDateFormat format =new SimpleDateFormat("dd-MM-yyyy");
 
    /**
     * Creates new form IssueBook
     */
    public IssueBook() throws FileNotFoundException {
        initComponents();
        readFile();
        readFile1();
        readFile2();
       
    }

   
    public void save() {
        PrintWriter p = null;
        try {
            File f = new File("Books.txt");
            p = new PrintWriter(f);
            for (int i = 0; i < counter; i++) {
                p.println(b[i].getId()+","+b[i].getCallNo()+","+b[i].getName()+","+b[i].getAuthor()+","+b[i].getPublisher()+","+b[i].getQuantity()+","+b[i].getIssued()+","+b[i].getAdded_date());
            }
            p.close();
        } catch (FileNotFoundException ex) {
            Logger.getLogger(DeleteLibrarian.class.getName()).log(Level.SEVERE, null, ex);
        } finally {
            p.close();
        }

    }
    


    
       public void readFile1() throws FileNotFoundException {
        File f = new File("IssuedBooks.txt");
        Scanner s = new Scanner(f);
        int i = 0;
        while (s.hasNext()) {
            String line = s.nextLine();
            String token[] = line.split(",");
            m[i] = new IssuedBook(token[0],token[1],token[2],token[3],token[4],token[5]);
            i++;
       
        }
         counter1 = i;
      
    }
               
               
               
               
               
               
    public void readFile() throws FileNotFoundException {
        File f = new File("Books.txt");
        Scanner s = new Scanner(f);
        int i = 0;
        while (s.hasNext()) {
            String line = s.nextLine();
            String token[] = line.split(",");
            b[i] = new Book(token[0], token[1], token[2], token[3], token[4], token[5], token[6], token[7]);
            i++;

        }
        counter = i;

    }
    
    public void readFile2() throws FileNotFoundException {
        File f = new File("Students.txt");
        Scanner s = new Scanner(f);
        int i = 0;
        while (s.hasNext()) {
            String line = s.nextLine();
            String token[] = line.split(",");
            c[i] = new Student(token[0], token[1], token[2], token[3], token[4], token[5],token[6]);
            i++;

        }
        counter2 = i;

    }
    public boolean checkId(String id){
           for(int j=0;j<counter2;j++){
            if(id.equals(c[j].getId())){
                return true;
            }
            }
           return false;
    }
  public boolean checkCallNo(String c){
           for(int j=0;j<counter;j++){
            if(c.equals(b[j].getCallNo())){
                return true;
            }
            }
           return false;
    }
    public boolean checkStdName(String x){
           for(int j=0;j<counter2;j++){
            if(x.equals(c[j].getName())){
                return true;
            }
            }
           return false;
    }
      public boolean checkStdContact(String z){
           for(int j=0;j<counter2;j++){
            if(z.equals(c[j].getContactNo())){
                return true;
            }
            }
           return false;
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        callNo1 = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        stdId1 = new javax.swing.JTextField();
        stdName1 = new javax.swing.JTextField();
        stdContact1 = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setText("Issue Book");

        jLabel2.setText("Book CallNo");

        jLabel3.setText("Student Id");

        jLabel4.setText("Student Name");

        jLabel5.setText("Studnent Contact");

        jLabel6.setForeground(java.awt.Color.red);
        jLabel6.setText("Note: please check Student ID carefully before issuing the book");

        jButton1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton1.setText("ISSUE");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton2.setText("Back");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel6))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(43, 43, 43)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel1)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel4))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(27, 27, 27)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(stdId1, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(callNo1, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jButton1)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                .addComponent(stdName1)
                                                .addComponent(stdContact1, javax.swing.GroupLayout.DEFAULT_SIZE, 121, Short.MAX_VALUE)))))
                                .addGap(11, 11, 11)))))
                .addContainerGap(27, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton2)
                .addGap(44, 44, 44))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jLabel1)
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(callNo1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(9, 9, 9)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(jLabel3)
                        .addGap(6, 6, 6))
                    .addComponent(stdId1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(stdName1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(stdContact1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 37, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addGap(35, 35, 35)
                .addComponent(jLabel6)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
     
            String callNo = callNo1.getText();
            String studentId = stdId1.getText();
            String studentName = stdName1.getText();
            String studentContact = stdContact1.getText();
          
         if(checkCallNo(callNo)==true&& checkId(studentId)==true&& checkStdName(studentName)&&checkStdContact(studentContact)){
            for (int i = 0; i < counter; i++) {
                if (callNo.equals(b[i].getCallNo())) {
                    int newQuantity = Integer.parseInt(b[i].getQuantity()) - 1;
                    b[i].setQuantity(String.valueOf(newQuantity));
                    int newIssued = Integer.parseInt(b[i].getIssued()) + 1;
                    b[i].setIssued(String.valueOf(newIssued));
                    save();
                }
            }
           
            Date date = new Date();
        try (FileWriter fw = new FileWriter("IssuedBooks.txt", true);
            PrintWriter p = new PrintWriter(fw)) {
            p.println( counter1 +","+callNo+","+studentId+","+studentName+","+studentContact+","+format.format(date));

        } catch (IOException e) {
            //exception handling left as an exercise for the reader
        }

        JOptionPane.showMessageDialog(this,"issued Successfully");
      
       LibrarianSection x =new LibrarianSection();
        this.hide();
        x.setVisible(true);
         }
         else{
             JOptionPane.showMessageDialog(this,"Invalid Input");
         }
             
    }//GEN-LAST:event_jButton1ActionPerformed
   
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        LibrarianSection x = new LibrarianSection();
        this.hide();
        x.setVisible(true);        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField callNo1;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JTextField stdContact1;
    private javax.swing.JTextField stdId1;
    private javax.swing.JTextField stdName1;
    // End of variables declaration//GEN-END:variables
}
